"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto = require("crypto");
const util_1 = require("util");
const dsa_digest_js_1 = require("./dsa_digest.js");
const node_key_js_1 = require("./node_key.js");
const sign_js_1 = require("./sign.js");
const get_sign_verify_key_js_1 = require("./get_sign_verify_key.js");
const [major, minor] = process.version
    .substr(1)
    .split('.')
    .map((str) => parseInt(str, 10));
const oneShotCallbackSupported = major >= 16 || (major === 15 && minor >= 13);
let oneShotVerify = crypto.verify;
if (oneShotVerify.length > 4 && oneShotCallbackSupported) {
    oneShotVerify = util_1.promisify(oneShotVerify);
}
const verify = async (alg, key, signature, data) => {
    if (alg.startsWith('HS')) {
        const expected = await sign_js_1.default(alg, get_sign_verify_key_js_1.default(alg, key, 'verify'), data);
        const actual = signature;
        try {
            return crypto.timingSafeEqual(actual, expected);
        }
        catch {
            return false;
        }
    }
    const algorithm = dsa_digest_js_1.default(alg);
    const keyObject = get_sign_verify_key_js_1.default(alg, key, 'verify');
    const keyInput = node_key_js_1.default(alg, keyObject);
    try {
        let result = oneShotVerify(algorithm, data, keyInput, signature);
        if (result instanceof Promise) {
            result = await result;
        }
        return result;
    }
    catch {
        return false;
    }
};
exports.default = verify;
