import {Module} from '@nestjs/common';
import {GraphQLModule} from '@nestjs/graphql';

import {UserGraphResolver} from './user/resolver';
import {LocalConfigModule} from '../config/config.module';
import {GlobalConfigService} from '../config/services/global.config';
import {UserRepository} from '../data/repos/user.repository';
import {PrismaModule} from '../prisma/prisma.module';
import {PrismaService} from '../prisma/prisma.service';

@Module({
  imports: [
    GraphQLModule.forRootAsync({
      imports: [LocalConfigModule, PrismaModule],
      useFactory: (
        localConfigService: GlobalConfigService,
        prismaService: PrismaService
      ) => ({
        cors: localConfigService.corsConfig,
        autoSchemaFile: localConfigService.autoGeneratedGraphQLSchemaFile,
        context: ({req}) => {
          console.log(req.session);
          return {
            // session: req.user,
            dataSources: {
              userRepo: new UserRepository(prismaService),
            },
          };
        },
      }),
      inject: [GlobalConfigService, PrismaService],
    }),
  ],
  providers: [UserGraphResolver],
})
export class GraphModule {}
